# train.py Config - Training
train:
  # For datasets, please pass atleast 1 value. If no datasets exist, pass "" as path for images.
  # Synthetic datasets with ground truth labels
  datasetsTrain:
      - images: '../../data/datasets/cleargrasp-dataset-train/stemless-plastic-champagne-glass-train/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-train/stemless-plastic-champagne-glass-train/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-train/square-plastic-bottle-train/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-train/square-plastic-bottle-train/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-train/heart-bath-bomb-train/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-train/heart-bath-bomb-train/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-train/flower-bath-bomb-train/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-train/flower-bath-bomb-train/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-train/cup-with-waves-train/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-train/cup-with-waves-train/camera-normals'

    # Synthetic datasets with ground truth labels - 10% split of train
  datasetsVal:
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/stemless-plastic-champagne-glass-val/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/stemless-plastic-champagne-glass-val/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/square-plastic-bottle-val/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/square-plastic-bottle-val/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/heart-bath-bomb-val/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/heart-bath-bomb-val/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/flower-bath-bomb-val/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/flower-bath-bomb-val/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/cup-with-waves-val/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-val/cup-with-waves-val/camera-normals'

  datasetsMatterportTrain:
    #- images: '/mnt/disks/dataset/matterport/matterport_train/v1/scans'
    #  labels: '/mnt/disks/dataset/matterport/matterport_render_normal'
  datasetsMatterportVal:
    #- images: '/mnt/disks/dataset/matterport/matterport_val/v1/scans'
    #  labels: '/mnt/disks/dataset/matterport/matterport_render_normal'
  datasetsScannetTrain:
    #- images: '/mnt/disks/dataset/scannet/scannet-rgb/scans/train'
    #  labels: '/mnt/disks/dataset/scannet/scannet_render_normal/train'
  datasetsScannetVal:
    #- images: '/mnt/disks/dataset/scannet/scannet-rgb/scans/val'
    #  labels: '/mnt/disks/dataset/scannet/scannet_render_normal/val'


  # Real Images (no ground truth labels)
  datasetsTestReal:
    - images: '../../data/datasets/cleargrasp-dataset-test-val/real-val/d435'
      labels: '../../data/datasets/cleargrasp-dataset-test-val/real-val/d435'
      masks: '../../data/datasets/cleargrasp-dataset-test-val/real-val/d435'

  # Synthetic datasets with ground truth labels - Used as test set
  datasetsTestSynthetic:
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/glass-round-potion-test/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/glass-round-potion-test/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/glass-square-potion-test/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/glass-square-potion-test/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/star-bath-bomb-test/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/star-bath-bomb-test/camera-normals'
      - images: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/tree-bath-bomb-test/rgb-imgs'
        labels: '../../data/datasets/cleargrasp-dataset-test-val/synthetic-test/tree-bath-bomb-test/camera-normals'


  # Training/Validation Params
  model: 'drn' # Possible values: ['drn', 'deeplab_xception', 'deeplab_resnet']
  batchSize: 196
  batchSizeMatterport: 0
  batchSizeScannet: 0
  validationBatchSize: 64
  testBatchSize: 64
  numEpochs: 100
  imgHeight: 256
  imgWidth: 256
  numClasses: 3
  numInputChannels: 3 # Num of channels in input image. RGB = 3 channels, Grayscale = 1 channel.
  numWorkers: 32 # Num of workers used in the dataloader
  logsDir: '../../training/surface_normals' # Directory where logs of each exp will be saved.
  lossFunc: 'cosine' # Possible values: ['cosine', 'radians']
  percentageDataForTraining: 1.0 # The percentage of images in dataset to be used for training. Rest used for validation.
  percentageDataForMatterportTraining: 0.0109 # 0.218  # The percentage of images in dataset to be used for training.
  percentageDataForScannetTraining: 0.052
  percentageDataForMatterportVal: 0.047
  percentageDataForScannettVal:  0.0601
  percentageDataForValidation: 1.0

  # Deeplab specific
  outputStride: 8 # Possible values: [8, 16]. Output stride for deeplabv3 model. Smaller values give finer details in output mask.
  epochSize: 1 # After these many epochs, change learning rate

  continueTraining: False  # If true, continue training from a checkpoint
  pathPrevCheckpoint: '../../training/surface_normals/exp-005/checkpoints/checkpoint-epoch-0002.pth' # Path to .pth checkpoint file to load to continue training from
  initOptimizerFromCheckpoint: False  # Re-Initialize optimizer's state from checkpoint. NOTE: when this is enabled, value of learningRate will be overridden with value from checkpoint.
  loadEpochNumberFromCheckpoint: False # If true, the epoch/iter numbering will start from the checkpoint's last epoch num.

  saveImageInterval: 1 # every N epochs, log output images to tensorboard
  saveImageIntervalIter: 100 # Every N iterations, log output images to tensorboard
  testInterval: 1 # Run on test set every nTestInterval epochs. Keep at 0 to skip tests.
  saveModelInterval: 2 # Save the model checkpoints every N epochs

  # Optimizer Params
  optimAdam:
    learningRate: 0.0001
    weightDecay: 0 # Other values: 0.0001
  optimSgd:
    learningRate: 1e-6
    momentum: 0.9
    weight_decay: 5e-4
  lrScheduler: 'lr_poly' # Possible Values: ['', 'StepLR', 'ReduceLROnPlateau']
  lrSchedulerStep:
    step_size: 4
    gamma: 0.9
  lrSchedulerPlateau:
    factor: 0.8
    patience: 25
    verbose: True

# eval.py Config - Validation/Testing Inference
eval:
  # Synthetic datasets with ground truth labels
  # Used as validation set
  datasetsSynthetic:
    - images: ''
      labels: ''

  # Datasets of real images, no labels available
  # Used as Test set
  datasetsReal:
    - images: ''

  # Params
  model: 'drn' # Possible values: ['drn', 'deeplab_xception', 'deeplab_resnet']
  numClasses: 3
  batchSize: 16
  imgHeight: 256
  imgWidth: 256
  numWorkers: 4 # Num of workers used in the dataloader
  pathWeightsFile: 'data/models/normals/checkpoint-normals.pth' # Path to the checkpoint to be loaded
  resultsDirSynthetic: 'data/results/test-synthetic' # The dir to which results on synthetic images will be stored
  resultsDirReal: 'data/results/test-real'  # The dir to which results on real images will be stored
  resultsWeightsSubDir: 'occlusion-weights' # The prediction of model will be converted to occlusion weights (for depth2depth) in this subfolder within each results folder
  resultsWeightsVizSubDir: 'occlusion-weights-viz' # The visualization of the occlusion weights will be saved in this subfolder within resultsWeightsSubDir
